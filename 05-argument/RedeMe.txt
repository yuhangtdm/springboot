Springmvc的请求流程大概是 被DispatcherServlet截获
 doService里执行doDispatch方法 通过HhandlerMapping获取HandlerExecutionChain(包含了拦截器和控制器)
然后找到HandlerAdapter去执行 RequestMappingHandlerAdapter对于每个请求
都会实例化一个ServletInvocableHandlerMethod进行处理
ServletInvocableHandlerMethod进行处理的时候 会针对请求和响应进行处理

1.HandlerArgumentMethodResolver 解析参数
springmvc中的方法参数可以是Integer,String,Double,HttpServletRequest等等 通过浏览器请求方法 这些参数是怎么绑定上的？

RequestMappingHandlerAdapter 实例化时会添加HttpMessageConverter(用于序列化流数据)
还会添加默认的RequestParamMethodArgumentResolver等各种resolver 用于处理@RequestParam注解
例如 RequestResponseBodyMethodProcessor 该类继承了HandlerArgumentMethodResolver和HandlerMethodReturnValueHandler
用于处理@RequestBody和@RepsonseBody的方法，内部用HttpMessageConverter消息转换器来处理 根据http请求头部的contentType然后选择合适的消息转换器进行读取。
重点方法：RequestMappingHandlerAdapter.invokeHandlerMethod
resolver,httpMessageConverter,类型转换器，属性编辑器 binderFactory

2.HandlerMethodReturnValueHandler 解析返回值

3.HttpMessageConverter 默认有许多消息转换器
主要将request里的数据流转成对象 或者将对象转成响应流输出
这种序列化和反序列化的工作就是由HttpMessageConverter来完成
如 ByteArrayHttpMessageConverter MappingJackson2HttpMessageConverter

4.数据绑定 属性编辑器 类型转换器等
spring对于属性绑定做了哪些事
PropertyEditorRegistry 用来注册属性编辑器
PropertyEditorRegistrySupport 实现类
TypeConverter 将value转为指定的类型

Converter 用于任意类型的转换
注册到FormattingConversionService里

默认的转化器很多 例如 StringToBooleanConverter
